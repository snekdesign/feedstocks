From ba67283784437c7c3c1aec15824397c5f8ae0828 Mon Sep 17 00:00:00 2001
From: snekdesign <104812819+snekdesign@users.noreply.github.com>
Date: Thu, 20 Feb 2025 18:55:09 +0800
Subject: [PATCH] customize

---
 Cargo.toml                                    | 32 ++++++++++---------
 crates/pixi-build-backend/Cargo.toml          |  2 ++
 .../src/intermediate_backend.rs               | 26 +++++++++++++++
 crates/pixi-build-rattler-build/Cargo.toml    |  2 ++
 .../pixi-build-rattler-build/src/protocol.rs  | 28 +++++++++++++++-
 5 files changed, 74 insertions(+), 16 deletions(-)

diff --git a/Cargo.toml b/Cargo.toml
index edcb1c8..effb308 100644
--- a/Cargo.toml
+++ b/Cargo.toml
@@ -51,15 +51,17 @@ jsonrpc-stdio-server = "18.0.0"
 jsonrpc-http-server = "18.0.0"
 jsonrpc-core = "18.0.0"
 
-rattler-build = { git = "https://github.com/prefix-dev/rattler-build", branch = "main", default-features = false }
+rattler-build = { path = "../rattler-build", default-features = false }
 
 file_url = "0.2.5"
 rattler_conda_types = { version = "0.40.0", default-features = false }
+rattler_config = { version = "0.2.11", default-features = false }
 rattler_digest = { version = "1.1.5", default-features = false }
 rattler_package_streaming = { version = "0.23.1", default-features = false }
 rattler_virtual_packages = { version = "2.1.3", default-features = false }
 
 pixi_build_types = { version = "*" }
+pixi_config = { version = "*" }
 pixi_consts = { version = "*" }
 pixi_manifest = { version = "*" }
 pixi_spec = { version = "*" }
@@ -72,17 +74,15 @@ recipe-stage0 = { path = "crates/recipe-stage0" }
 
 
 [patch.crates-io]
-pixi_build_types = { git = "https://github.com/prefix-dev/pixi", branch = "main" }
-pixi_consts = { git = "https://github.com/prefix-dev/pixi", branch = "main" }
-pixi_manifest = { git = "https://github.com/prefix-dev/pixi", branch = "main" }
-pixi_spec = { git = "https://github.com/prefix-dev/pixi", branch = "main" }
-pixi_build_type_conversions = { git = "https://github.com/prefix-dev/pixi", branch = "main" }
-
-#pixi_build_types = { path = "../pixi/crates/pixi_build_types" }
-#pixi_consts = { path = "../pixi/crates/pixi_consts" }
-#pixi_manifest = { path = "../pixi/crates/pixi_manifest" }
-#pixi_spec = { path = "../pixi/crates/pixi_spec" }
-#pixi_build_type_conversions = { path = "../pixi/crates/pixi_build_type_conversions" }
+pixi_build_types = { path = "../pixi/crates/pixi_build_types" }
+pixi_config = { path = "../pixi/crates/pixi_config" }
+pixi_consts = { path = "../pixi/crates/pixi_consts" }
+pixi_manifest = { path = "../pixi/crates/pixi_manifest" }
+pixi_spec = { path = "../pixi/crates/pixi_spec" }
+pixi_build_type_conversions = { path = "../pixi/crates/pixi_build_type_conversions" }
+reqwest-middleware = { path = "../reqwest-middleware/reqwest-middleware" }
+reqwest-retry = { path = "../reqwest-middleware/reqwest-retry" }
+version-ranges = { path = "../pubgrub/version-ranges" }
 
 #rattler_cache = { path = "../rattler/crates/rattler_cache" }
 #rattler_conda_types = { path = "../rattler/crates/rattler_conda_types" }
@@ -94,9 +94,11 @@ pixi_build_type_conversions = { git = "https://github.com/prefix-dev/pixi", bran
 # [patch."https://github.com/prefix-dev/rattler-build"]
 # rattler-build = { path = "../rattler-build/" }
 
-[profile.dev.package]
-insta.opt-level = 3
-similar.opt-level = 3
+[profile.release]
+codegen-units = 1
+lto = true
+opt-level = 3
+strip = true
 
 [profile.ci]
 codegen-units = 16
diff --git a/crates/pixi-build-backend/Cargo.toml b/crates/pixi-build-backend/Cargo.toml
index a483086..e26fb59 100644
--- a/crates/pixi-build-backend/Cargo.toml
+++ b/crates/pixi-build-backend/Cargo.toml
@@ -29,6 +29,7 @@ miette = { workspace = true }
 minijinja = { workspace = true }
 parking_lot = { workspace = true }
 rattler_conda_types = { workspace = true }
+rattler_config = { workspace = true }
 rattler_package_streaming = { workspace = true }
 rattler_virtual_packages = { workspace = true }
 rattler-build = { workspace = true }
@@ -50,6 +51,7 @@ pathdiff = { workspace = true }
 thiserror = { workspace = true }
 
 pixi_build_types = { workspace = true }
+pixi_config = { workspace = true }
 pixi_manifest = { workspace = true }
 pixi_spec = { workspace = true }
 pixi_build_type_conversions = { workspace = true }
diff --git a/crates/pixi-build-backend/src/intermediate_backend.rs b/crates/pixi-build-backend/src/intermediate_backend.rs
index 5554bda..35aea53 100644
--- a/crates/pixi-build-backend/src/intermediate_backend.rs
+++ b/crates/pixi-build-backend/src/intermediate_backend.rs
@@ -603,10 +603,36 @@ where
         .await
         .into_diagnostic()?;
 
+        let base_client = {
+            let config = pixi_config::Config::load_global();
+            let mut config_base = rattler_config::config::ConfigBase::default();
+            config_base.mirrors.extend(config.mirrors.into_iter());
+            config_base.s3_options.0.extend(
+                config.s3_options.into_iter().map(move |(k, v)| {
+                    (k, rattler_config::config::s3::S3Options {
+                        endpoint_url: v.endpoint_url,
+                        region: v.region,
+                        force_path_style: v.force_path_style,
+                    })
+                })
+            );
+            let common = rattler_build::opt::CommonData::from_opts_and_config(
+                rattler_build::opt::CommonOpts::default(),
+                config_base,
+            );
+            rattler_build::tool_configuration::reqwest_client_from_auth_storage(
+                None,
+                common.s3_config,
+                common.mirror_config,
+                None,
+            ).into_diagnostic()?
+        };
+
         let tool_config = Configuration::builder()
             .with_opt_cache_dir(self.cache_dir.clone())
             .with_logging_output_handler(self.logging_output_handler.clone())
             .with_testing(false)
+            .with_reqwest_client(base_client)
             // Pixi is incremental so keep the build
             .with_keep_build(true)
             // This indicates that the environments are externally managed, e.g. they are already
diff --git a/crates/pixi-build-rattler-build/Cargo.toml b/crates/pixi-build-rattler-build/Cargo.toml
index 9409ebd..4dabd0c 100644
--- a/crates/pixi-build-rattler-build/Cargo.toml
+++ b/crates/pixi-build-rattler-build/Cargo.toml
@@ -13,6 +13,7 @@ async-trait = { workspace = true }
 fs-err = { workspace = true }
 miette = { workspace = true }
 rattler_conda_types = { workspace = true }
+rattler_config = { workspace = true }
 rattler_virtual_packages = { workspace = true }
 rattler-build = { workspace = true }
 serde = { workspace = true, features = ["derive"] }
@@ -26,6 +27,7 @@ itertools = { workspace = true }
 pixi-build-backend = { workspace = true }
 
 pixi_build_types = { workspace = true }
+pixi_config = { workspace = true }
 chrono = "0.4.41"
 
 [dev-dependencies]
diff --git a/crates/pixi-build-rattler-build/src/protocol.rs b/crates/pixi-build-rattler-build/src/protocol.rs
index 2fc6ebd..a022d4b 100644
--- a/crates/pixi-build-rattler-build/src/protocol.rs
+++ b/crates/pixi-build-rattler-build/src/protocol.rs
@@ -32,7 +32,7 @@ use rattler_build::{
     metadata::{BuildConfiguration, Debug, Output, PlatformWithVirtualPackages},
     recipe::{Jinja, ParsingError, Recipe, parser::find_outputs_from_src, variable::Variable},
     selectors::SelectorConfig,
-    tool_configuration::Configuration,
+    tool_configuration::{Configuration, reqwest_client_from_auth_storage},
     types::{PackageIdentifier, PackagingSettings},
     variant_config::{ParseErrors, VariantConfig},
 };
@@ -324,10 +324,36 @@ impl Protocol for RattlerBuildBackend {
             self.recipe_source.path.clone(),
         );
 
+        let base_client = {
+            let config = pixi_config::Config::load_global();
+            let mut config_base = rattler_config::config::ConfigBase::default();
+            config_base.mirrors.extend(config.mirrors.into_iter());
+            config_base.s3_options.0.extend(
+                config.s3_options.into_iter().map(move |(k, v)| {
+                    (k, rattler_config::config::s3::S3Options {
+                        endpoint_url: v.endpoint_url,
+                        region: v.region,
+                        force_path_style: v.force_path_style,
+                    })
+                })
+            );
+            let common = rattler_build::opt::CommonData::from_opts_and_config(
+                rattler_build::opt::CommonOpts::default(),
+                config_base,
+            );
+            reqwest_client_from_auth_storage(
+                None,
+                common.s3_config,
+                common.mirror_config,
+                None,
+            ).into_diagnostic()?
+        };
+
         let tool_config = Configuration::builder()
             .with_opt_cache_dir(self.cache_dir.clone())
             .with_logging_output_handler(self.logging_output_handler.clone())
             .with_testing(false)
+            .with_reqwest_client(base_client)
             // Pixi is incremental so keep the build
             .with_keep_build(true)
             // This indicates that the environments are externally managed, e.g. they are already
-- 
2.49.0.windows.1

