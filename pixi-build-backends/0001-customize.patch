From ba67283784437c7c3c1aec15824397c5f8ae0828 Mon Sep 17 00:00:00 2001
From: snekdesign <104812819+snekdesign@users.noreply.github.com>
Date: Thu, 20 Feb 2025 18:55:09 +0800
Subject: [PATCH] customize

---
 Cargo.toml                                    | 27 ++++++------
 crates/pixi-build-backend/Cargo.toml          |  1 +
 .../src/intermediate_backend.rs               | 36 ++++++++++++++++
 crates/pixi-build-rattler-build/Cargo.toml    |  1 +
 .../pixi-build-rattler-build/src/protocol.rs  | 43 +++++++++++++++----
 5 files changed, 87 insertions(+), 21 deletions(-)

diff --git a/Cargo.toml b/Cargo.toml
index 2416451..0131e79 100644
--- a/Cargo.toml
+++ b/Cargo.toml
@@ -50,6 +50,7 @@ rattler_package_streaming = { version = "0.22.35", default-features = false }
 rattler_virtual_packages = { version = "2.0.9", default-features = false }
 
 pixi_build_types = { version = "*" }
+pixi_config = { version = "*" }
 pixi_consts = { version = "*" }
 pixi_manifest = { version = "*" }
 pixi_spec = { version = "*" }
@@ -62,17 +63,12 @@ recipe-stage0 = { path = "crates/recipe-stage0" }
 
 
 [patch.crates-io]
-pixi_build_types = { git = "https://github.com/prefix-dev/pixi", branch = "main" }
-pixi_consts = { git = "https://github.com/prefix-dev/pixi", branch = "main" }
-pixi_manifest = { git = "https://github.com/prefix-dev/pixi", branch = "main" }
-pixi_spec = { git = "https://github.com/prefix-dev/pixi", branch = "main" }
-pixi_build_type_conversions = { git = "https://github.com/prefix-dev/pixi", branch = "main" }
-
-#pixi_build_types = { path = "../pixi/crates/pixi_build_types" }
-#pixi_consts = { path = "../pixi/crates/pixi_consts" }
-#pixi_manifest = { path = "../pixi/crates/pixi_manifest" }
-#pixi_spec = { path = "../pixi/crates/pixi_spec" }
-#pixi_build_type_conversions = { path = "../pixi/crates/pixi_build_type_conversions" }
+pixi_build_types = { path = "../pixi/crates/pixi_build_types" }
+pixi_config = { path = "../pixi/crates/pixi_config" }
+pixi_consts = { path = "../pixi/crates/pixi_consts" }
+pixi_manifest = { path = "../pixi/crates/pixi_manifest" }
+pixi_spec = { path = "../pixi/crates/pixi_spec" }
+pixi_build_type_conversions = { path = "../pixi/crates/pixi_build_type_conversions" }
 
 #rattler_cache = { path = "../rattler/crates/rattler_cache" }
 #rattler_conda_types = { path = "../rattler/crates/rattler_conda_types" }
@@ -81,5 +77,10 @@ pixi_build_type_conversions = { git = "https://github.com/prefix-dev/pixi", bran
 #rattler_repodata_gateway = { path = "../rattler/crates/rattler_repodata_gateway" }
 #simple_spawn_blocking = { path = "../rattler/crates/simple_spawn_blocking" }
 
-rattler-build = { git = "https://github.com/prefix-dev/rattler-build", branch = "main" }
-#rattler-build = { path = "../rattler-build" }
+rattler-build = { path = "../rattler-build" }
+
+[profile.release]
+codegen-units = 1
+lto = true
+opt-level = 3
+strip = true
diff --git a/crates/pixi-build-backend/Cargo.toml b/crates/pixi-build-backend/Cargo.toml
index d89de80..f81a88c 100644
--- a/crates/pixi-build-backend/Cargo.toml
+++ b/crates/pixi-build-backend/Cargo.toml
@@ -34,6 +34,7 @@ dirs = { workspace = true }
 pathdiff = { workspace = true }
 
 pixi_build_types = { workspace = true }
+pixi_config = { workspace = true }
 pixi_consts = { workspace = true }
 pixi_manifest = { workspace = true }
 pixi_spec = { workspace = true }
diff --git a/crates/pixi-build-backend/src/intermediate_backend.rs b/crates/pixi-build-backend/src/intermediate_backend.rs
index 28371bc..c319e79 100644
--- a/crates/pixi-build-backend/src/intermediate_backend.rs
+++ b/crates/pixi-build-backend/src/intermediate_backend.rs
@@ -282,6 +282,23 @@ where
             &selector_config_for_variants,
         )?;
 
+        let base_client = {
+            let common = rattler_build::opt::CommonData::new(
+                None,
+                false,
+                None,
+                pixi_config::Config::load_global(),
+                None,
+                None,
+            );
+            rattler_build::tool_configuration::reqwest_client_from_auth_storage(
+                None,
+                common.s3_config,
+                common.mirror_config,
+                None,
+            ).into_diagnostic()?
+        };
+
         // Build the tool configuration
         let tool_config = Arc::new(
             Configuration::builder()
@@ -290,6 +307,7 @@ where
                 .with_channel_config(channel_config)
                 .with_testing(false)
                 .with_keep_build(true)
+                .with_reqwest_client(base_client)
                 .finish(),
         );
 
@@ -584,6 +602,23 @@ where
             &selector_config_for_variants,
         )?;
 
+        let base_client = {
+            let common = rattler_build::opt::CommonData::new(
+                None,
+                false,
+                None,
+                pixi_config::Config::load_global(),
+                None,
+                None,
+            );
+            rattler_build::tool_configuration::reqwest_client_from_auth_storage(
+                None,
+                common.s3_config,
+                common.mirror_config,
+                None,
+            ).into_diagnostic()?
+        };
+
         // Build the tool configuration
         let tool_config = Arc::new(
             Configuration::builder()
@@ -592,6 +627,7 @@ where
                 .with_channel_config(channel_config)
                 .with_testing(false)
                 .with_keep_build(true)
+                .with_reqwest_client(base_client)
                 .finish(),
         );
 
diff --git a/crates/pixi-build-rattler-build/Cargo.toml b/crates/pixi-build-rattler-build/Cargo.toml
index 958daba..fc4f537 100644
--- a/crates/pixi-build-rattler-build/Cargo.toml
+++ b/crates/pixi-build-rattler-build/Cargo.toml
@@ -22,5 +22,6 @@ itertools = { workspace = true }
 pixi-build-backend = { workspace = true }
 
 pixi_build_types = { workspace = true }
+pixi_config = { workspace = true }
 
 [dev-dependencies]
diff --git a/crates/pixi-build-rattler-build/src/protocol.rs b/crates/pixi-build-rattler-build/src/protocol.rs
index 89b0be1..46bbb42 100644
--- a/crates/pixi-build-rattler-build/src/protocol.rs
+++ b/crates/pixi-build-rattler-build/src/protocol.rs
@@ -1,5 +1,4 @@
 use std::{
-    collections::HashMap,
     path::{Path, PathBuf},
     str::FromStr,
 };
@@ -31,7 +30,7 @@ use rattler_build::{
     recipe::{Jinja, parser::BuildString},
     render::resolved_dependencies::DependencyInfo,
     selectors::SelectorConfig,
-    tool_configuration::{BaseClient, Configuration},
+    tool_configuration::{Configuration, reqwest_client_from_auth_storage},
 };
 use rattler_conda_types::{ChannelConfig, MatchSpec, PackageName, Platform};
 use rattler_virtual_packages::VirtualPackageOverrides;
@@ -99,7 +98,7 @@ impl Protocol for RattlerBuildBackend {
 
         let channels = params
             .channel_base_urls
-            .unwrap_or_else(|| vec![Url::from_str("https://prefix.dev/conda-forge").unwrap()]);
+            .unwrap_or_else(|| vec![Url::from_str("https://conda.anaconda.org/conda-forge").unwrap()]);
 
         let discovered_outputs =
             rattler_build_tool.discover_outputs(&params.variant_configuration)?;
@@ -129,8 +128,22 @@ impl Protocol for RattlerBuildBackend {
             build_platform,
         )?;
 
-        let base_client =
-            BaseClient::new(None, None, HashMap::default(), HashMap::default()).unwrap();
+        let base_client = {
+            let common = rattler_build::opt::CommonData::new(
+                None,
+                false,
+                None,
+                pixi_config::Config::load_global(),
+                None,
+                None,
+            );
+            reqwest_client_from_auth_storage(
+                None,
+                common.s3_config,
+                common.mirror_config,
+                None,
+            ).into_diagnostic()?
+        };
 
         let tool_config = Configuration::builder()
             .with_opt_cache_dir(self.cache_dir.clone())
@@ -284,7 +297,7 @@ impl Protocol for RattlerBuildBackend {
 
         let channels = params
             .channel_base_urls
-            .unwrap_or_else(|| vec![Url::from_str("https://prefix.dev/conda-forge").unwrap()]);
+            .unwrap_or_else(|| vec![Url::from_str("https://conda.anaconda.org/conda-forge").unwrap()]);
 
         let rattler_build_tool = RattlerBuild::new(
             self.recipe_source.clone(),
@@ -320,8 +333,22 @@ impl Protocol for RattlerBuildBackend {
 
         let mut built = vec![];
 
-        let base_client =
-            BaseClient::new(None, None, HashMap::default(), HashMap::default()).unwrap();
+        let base_client = {
+            let common = rattler_build::opt::CommonData::new(
+                None,
+                false,
+                None,
+                pixi_config::Config::load_global(),
+                None,
+                None,
+            );
+            reqwest_client_from_auth_storage(
+                None,
+                common.s3_config,
+                common.mirror_config,
+                None,
+            ).into_diagnostic()?
+        };
 
         let tool_config = Configuration::builder()
             .with_opt_cache_dir(self.cache_dir.clone())
-- 
2.49.0.windows.1

