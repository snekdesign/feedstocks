From 6915516b939358e952b5bfbe10e178eff6359da9 Mon Sep 17 00:00:00 2001
From: snekdesign <104812819+snekdesign@users.noreply.github.com>
Date: Tue, 20 Aug 2024 20:44:27 +0800
Subject: [PATCH] customize

---
 Cargo.toml                                    | 79 ++++++++++---------
 build.rs                                      |  3 +
 .../src/prefix/compressed_mapping_client.rs   | 21 ++++-
 src/global/install.rs                         |  2 +-
 src/global/project/parsed_manifest.rs         |  6 +-
 5 files changed, 66 insertions(+), 45 deletions(-)
 create mode 100644 build.rs

diff --git a/Cargo.toml b/Cargo.toml
index 7465b43..5bd3713 100644
--- a/Cargo.toml
+++ b/Cargo.toml
@@ -99,55 +99,55 @@ toml_edit = "0.22.24"
 tracing = "0.1.41"
 tracing-subscriber = "0.3.19"
 typed-path = "0.10.0"
-uv-build-frontend = { git = "https://github.com/astral-sh/uv", tag = "0.6.9" }
-uv-distribution-filename = { git = "https://github.com/astral-sh/uv", tag = "0.6.9" }
-uv-distribution-types = { git = "https://github.com/astral-sh/uv", tag = "0.6.9" }
-uv-install-wheel = { git = "https://github.com/astral-sh/uv", tag = "0.6.9" }
-uv-pep440 = { git = "https://github.com/astral-sh/uv", tag = "0.6.9" }
-uv-pep508 = { git = "https://github.com/astral-sh/uv", tag = "0.6.9" }
-uv-platform-tags = { git = "https://github.com/astral-sh/uv", tag = "0.6.9" }
-uv-pypi-types = { git = "https://github.com/astral-sh/uv", tag = "0.6.9" }
-uv-requirements-txt = { git = "https://github.com/astral-sh/uv", tag = "0.6.9" }
+uv-build-frontend = { path = "../uv/crates/uv-build-frontend" }
+uv-distribution-filename = { path = "../uv/crates/uv-distribution-filename" }
+uv-distribution-types = { path = "../uv/crates/uv-distribution-types" }
+uv-install-wheel = { path = "../uv/crates/uv-install-wheel" }
+uv-pep440 = { path = "../uv/crates/uv-pep440" }
+uv-pep508 = { path = "../uv/crates/uv-pep508" }
+uv-platform-tags = { path = "../uv/crates/uv-platform-tags" }
+uv-pypi-types = { path = "../uv/crates/uv-pypi-types" }
+uv-requirements-txt = { path = "../uv/crates/uv-requirements-txt" }
 
 wax = "0.6.0"
 which = "7.0.2"
 
 # Rattler crates
-file_url = "0.2.4"
-rattler = { version = "0.33.4", default-features = false }
-rattler_cache = { version = "0.3.16", default-features = false }
-rattler_conda_types = { version = "0.32.0", default-features = false, features = [
+file_url = { path = "../rattler/crates/file_url" }
+rattler = { path = "../rattler/crates/rattler", default-features = false }
+rattler_cache = { path = "../rattler/crates/rattler_cache", default-features = false }
+rattler_conda_types = { path = "../rattler/crates/rattler_conda_types", default-features = false, features = [
   "rayon",
 ] }
-rattler_digest = { version = "1.1.0", default-features = false }
-rattler_lock = { version = "0.23.0", default-features = false }
-rattler_menuinst = { version = "0.2.6", default-features = false }
-rattler_networking = { version = "0.22.11", default-features = false, features = [
+rattler_digest = { path = "../rattler/crates/rattler_digest", default-features = false }
+rattler_lock = { path = "../rattler/crates/rattler_lock", default-features = false }
+rattler_menuinst = { path = "../rattler/crates/rattler_menuinst", default-features = false }
+rattler_networking = { path = "../rattler/crates/rattler_networking", default-features = false, features = [
   "google-cloud-auth",
 ] }
-rattler_repodata_gateway = { version = "0.22.4", default-features = false }
-rattler_shell = { version = "0.22.25", default-features = false }
-rattler_solve = { version = "1.4.3", default-features = false }
-rattler_virtual_packages = { version = "2.0.9", default-features = false }
+rattler_repodata_gateway = { path = "../rattler/crates/rattler_repodata_gateway", default-features = false }
+rattler_shell = { path = "../rattler/crates/rattler_shell", default-features = false }
+rattler_solve = { path = "../rattler/crates/rattler_solve", default-features = false }
+rattler_virtual_packages = { path = "../rattler/crates/rattler_virtual_packages", default-features = false }
 
 # Bumping this to a higher version breaks the Windows path handling.
 url = "2.5.4"
-uv-auth = { git = "https://github.com/astral-sh/uv", tag = "0.6.9" }
-uv-cache = { git = "https://github.com/astral-sh/uv", tag = "0.6.9" }
-uv-cache-info = { git = "https://github.com/astral-sh/uv", tag = "0.6.9" }
-uv-client = { git = "https://github.com/astral-sh/uv", tag = "0.6.9" }
-uv-configuration = { git = "https://github.com/astral-sh/uv", tag = "0.6.9" }
-uv-dispatch = { git = "https://github.com/astral-sh/uv", tag = "0.6.9" }
-uv-distribution = { git = "https://github.com/astral-sh/uv", tag = "0.6.9" }
-uv-git = { git = "https://github.com/astral-sh/uv", tag = "0.6.9" }
-uv-git-types = { git = "https://github.com/astral-sh/uv", tag = "0.6.9" }
-uv-installer = { git = "https://github.com/astral-sh/uv", tag = "0.6.9" }
-uv-normalize = { git = "https://github.com/astral-sh/uv", tag = "0.6.9" }
-uv-python = { git = "https://github.com/astral-sh/uv", tag = "0.6.9" }
-uv-requirements = { git = "https://github.com/astral-sh/uv", tag = "0.6.9" }
-uv-resolver = { git = "https://github.com/astral-sh/uv", tag = "0.6.9" }
-uv-types = { git = "https://github.com/astral-sh/uv", tag = "0.6.9" }
-uv-workspace = { git = "https://github.com/astral-sh/uv", tag = "0.6.9" }
+uv-auth = { path = "../uv/crates/uv-auth" }
+uv-cache = { path = "../uv/crates/uv-cache" }
+uv-cache-info = { path = "../uv/crates/uv-cache-info" }
+uv-client = { path = "../uv/crates/uv-client" }
+uv-configuration = { path = "../uv/crates/uv-configuration" }
+uv-dispatch = { path = "../uv/crates/uv-dispatch" }
+uv-distribution = { path = "../uv/crates/uv-distribution" }
+uv-git = { path = "../uv/crates/uv-git" }
+uv-git-types = { path = "../uv/crates/uv-git-types" }
+uv-installer = { path = "../uv/crates/uv-installer" }
+uv-normalize = { path = "../uv/crates/uv-normalize" }
+uv-python = { path = "../uv/crates/uv-python" }
+uv-requirements = { path = "../uv/crates/uv-requirements" }
+uv-resolver = { path = "../uv/crates/uv-resolver" }
+uv-types = { path = "../uv/crates/uv-types" }
+uv-workspace = { path = "../uv/crates/uv-workspace" }
 winapi = { version = "0.3.9", default-features = false }
 xxhash-rust = "0.8.15"
 zip = { version = "2.4.2", default-features = false }
@@ -381,7 +381,10 @@ tokio = { workspace = true, features = ["rt"] }
 
 [patch.crates-io]
 # This is a temporary patch to get `cargo vendor` to work with the `uv` and pep508_rs` crates.
-version-ranges = { git = "https://github.com/astral-sh/pubgrub", rev = "b70cf707aa43f21b32f3a61b8a0889b15032d5c4" }
+version-ranges = { path = "../uv/pubgrub/version-ranges" }
+
+[build-dependencies]
+thunk-rs = { version = "0.3.3", features = ["win7"], default-features = false }
 
 # Config for 'dist'
 [workspace.metadata.dist]
diff --git a/build.rs b/build.rs
new file mode 100644
index 0000000..507c62e
--- /dev/null
+++ b/build.rs
@@ -0,0 +1,3 @@
+fn main() {
+    thunk::thunk();
+}
diff --git a/crates/pypi_mapping/src/prefix/compressed_mapping_client.rs b/crates/pypi_mapping/src/prefix/compressed_mapping_client.rs
index c10c460..4e8c522 100644
--- a/crates/pypi_mapping/src/prefix/compressed_mapping_client.rs
+++ b/crates/pypi_mapping/src/prefix/compressed_mapping_client.rs
@@ -1,7 +1,9 @@
 use std::sync::Arc;
 
 use async_once_cell::OnceCell;
+use pixi_consts::consts;
 use rattler_conda_types::{PackageUrl, RepoDataRecord};
+use reqwest::header::{ACCEPT, HeaderMap, HeaderName, HeaderValue, USER_AGENT};
 use reqwest_middleware::ClientWithMiddleware;
 use tokio::sync::Semaphore;
 use url::Url;
@@ -11,7 +13,7 @@ use crate::{
 };
 
 const COMPRESSED_MAPPING: &str =
-    "https://raw.githubusercontent.com/prefix-dev/parselmouth/main/files/compressed_mapping.json";
+    "https://api.github.com/repos/prefix-dev/parselmouth/contents/files/compressed_mapping.json";
 
 /// A client for fetching and caching the compressed mapping from the
 /// parselmouth github repository.
@@ -98,9 +100,26 @@ impl CompressedMappingClient {
                     ),
                     None => None,
                 };
+                let mut headers = HeaderMap::new();
+                if compressed_mapping_url.as_str().starts_with("https://api.github.com/repos/") {
+                    let user_agent = format!("pixi/{}", consts::PIXI_VERSION);
+                    headers.insert(
+                        ACCEPT,
+                        HeaderValue::from_static("application/vnd.github.raw+json"),
+                    );
+                    headers.insert(
+                        USER_AGENT,
+                        HeaderValue::from_str(&user_agent).unwrap(),
+                    );
+                    headers.insert(
+                        HeaderName::from_static("x-github-api-version"),
+                        HeaderValue::from_static("2022-11-28"),
+                    );
+                }
                 let response = inner
                     .client
                     .get(compressed_mapping_url)
+                    .headers(headers)
                     .send()
                     .await?
                     .error_for_status()
diff --git a/src/global/install.rs b/src/global/install.rs
index 7dfe9ad..7f9c2ba 100644
--- a/src/global/install.rs
+++ b/src/global/install.rs
@@ -54,7 +54,7 @@ pub(crate) fn script_exec_mapping<'a>(
             } else {
                 false
             }
-        })
+        }).or_else(|| matching_executables.first())
     } else {
         matching_executables.first()
     };
diff --git a/src/global/project/parsed_manifest.rs b/src/global/project/parsed_manifest.rs
index 21efb94..50ea70e 100644
--- a/src/global/project/parsed_manifest.rs
+++ b/src/global/project/parsed_manifest.rs
@@ -373,11 +373,7 @@ impl FromStr for ExposedName {
     type Err = ExposedNameError;
 
     fn from_str(value: &str) -> Result<Self, Self::Err> {
-        if value == pixi_utils::executable_name() {
-            Err(ExposedNameError::PixiBinParseError)
-        } else {
-            Ok(ExposedName(value.to_string()))
-        }
+        Ok(ExposedName(value.to_string()))
     }
 }
 
-- 
2.46.0.windows.1

