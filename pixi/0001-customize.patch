From 6915516b939358e952b5bfbe10e178eff6359da9 Mon Sep 17 00:00:00 2001
From: snekdesign <104812819+snekdesign@users.noreply.github.com>
Date: Tue, 20 Aug 2024 20:44:27 +0800
Subject: [PATCH] customize

---
 Cargo.toml                                    | 64 +++++++++----------
 .../pypi_mapping/src/custom_pypi_mapping.rs   | 19 ++++++
 .../src/prefix_pypi_name_mapping.rs           |  2 +-
 src/global/install.rs                         |  2 +-
 src/global/project/parsed_manifest.rs         |  6 +-
 5 files changed, 54 insertions(+), 39 deletions(-)

diff --git a/Cargo.toml b/Cargo.toml
index 9c8b379..82ae106 100644
--- a/Cargo.toml
+++ b/Cargo.toml
@@ -90,50 +90,50 @@ toml_edit = "0.22.22"
 tracing = "0.1.41"
 tracing-subscriber = "0.3.19"
 typed-path = "0.10.0"
-uv-distribution-filename = { git = "https://github.com/wolfv/uv", branch = "ignore-rayon-init" }
-uv-distribution-types = { git = "https://github.com/wolfv/uv", branch = "ignore-rayon-init" }
-uv-install-wheel = { git = "https://github.com/wolfv/uv", branch = "ignore-rayon-init" }
-uv-pep440 = { git = "https://github.com/wolfv/uv", branch = "ignore-rayon-init" }
-uv-pep508 = { git = "https://github.com/wolfv/uv", branch = "ignore-rayon-init" }
-uv-platform-tags = { git = "https://github.com/wolfv/uv", branch = "ignore-rayon-init" }
-uv-pypi-types = { git = "https://github.com/wolfv/uv", branch = "ignore-rayon-init" }
-uv-requirements-txt = { git = "https://github.com/wolfv/uv", branch = "ignore-rayon-init" }
+uv-distribution-filename = { path = "../uv/crates/uv-distribution-filename" }
+uv-distribution-types = { path = "../uv/crates/uv-distribution-types" }
+uv-install-wheel = { path = "../uv/crates/uv-install-wheel" }
+uv-pep440 = { path = "../uv/crates/uv-pep440" }
+uv-pep508 = { path = "../uv/crates/uv-pep508" }
+uv-platform-tags = { path = "../uv/crates/uv-platform-tags" }
+uv-pypi-types = { path = "../uv/crates/uv-pypi-types" }
+uv-requirements-txt = { path = "../uv/crates/uv-requirements-txt" }
 wax = "0.6.0"
 which = "7.0.1"
 
 # Rattler crates
-file_url = "0.2.1"
-rattler = { version = "0.28.9", default-features = false }
-rattler_cache = { version = "0.3.1", default-features = false }
-rattler_conda_types = { version = "0.29.7", default-features = false, features = [
+file_url = { path = "../rattler/crates/file_url" }
+rattler = { path = "../rattler/crates/rattler", default-features = false }
+rattler_cache = { path = "../rattler/crates/rattler_cache", default-features = false }
+rattler_conda_types = { path = "../rattler/crates/rattler_conda_types", default-features = false, features = [
   "rayon",
 ] }
-rattler_digest = { version = "1.0.4", default-features = false }
-rattler_lock = { version = "0.22.36", default-features = false }
-rattler_networking = { version = "0.21.9", default-features = false, features = [
+rattler_digest = { path = "../rattler/crates/rattler_digest", default-features = false }
+rattler_lock = { path = "../rattler/crates/rattler_lock", default-features = false }
+rattler_networking = { path = "../rattler/crates/rattler_networking", default-features = false, features = [
   "google-cloud-auth",
 ] }
-rattler_repodata_gateway = { version = "0.21.29", default-features = false }
-rattler_shell = { version = "0.22.12", default-features = false }
-rattler_solve = { version = "1.3.1", default-features = false }
-rattler_virtual_packages = { version = "1.1.15", default-features = false }
+rattler_repodata_gateway = { path = "../rattler/crates/rattler_repodata_gateway", default-features = false }
+rattler_shell = { path = "../rattler/crates/rattler_shell", default-features = false }
+rattler_solve = { path = "../rattler/crates/rattler_solve", default-features = false }
+rattler_virtual_packages = { path = "../rattler/crates/rattler_virtual_packages", default-features = false }
 
 
 # Bumping this to a higher version breaks the Windows path handling.
 url = "2.5.4"
-uv-auth = { git = "https://github.com/wolfv/uv", branch = "ignore-rayon-init" }
-uv-cache = { git = "https://github.com/wolfv/uv", branch = "ignore-rayon-init" }
-uv-client = { git = "https://github.com/wolfv/uv", branch = "ignore-rayon-init" }
-uv-configuration = { git = "https://github.com/wolfv/uv", branch = "ignore-rayon-init" }
-uv-dispatch = { git = "https://github.com/wolfv/uv", branch = "ignore-rayon-init" }
-uv-distribution = { git = "https://github.com/wolfv/uv", branch = "ignore-rayon-init" }
-uv-git = { git = "https://github.com/wolfv/uv", branch = "ignore-rayon-init" }
-uv-installer = { git = "https://github.com/wolfv/uv", branch = "ignore-rayon-init" }
-uv-normalize = { git = "https://github.com/wolfv/uv", branch = "ignore-rayon-init" }
-uv-python = { git = "https://github.com/wolfv/uv", branch = "ignore-rayon-init" }
-uv-requirements = { git = "https://github.com/wolfv/uv", branch = "ignore-rayon-init" }
-uv-resolver = { git = "https://github.com/wolfv/uv", branch = "ignore-rayon-init" }
-uv-types = { git = "https://github.com/wolfv/uv", branch = "ignore-rayon-init" }
+uv-auth = { path = "../uv/crates/uv-auth" }
+uv-cache = { path = "../uv/crates/uv-cache" }
+uv-client = { path = "../uv/crates/uv-client" }
+uv-configuration = { path = "../uv/crates/uv-configuration" }
+uv-dispatch = { path = "../uv/crates/uv-dispatch" }
+uv-distribution = { path = "../uv/crates/uv-distribution" }
+uv-git = { path = "../uv/crates/uv-git" }
+uv-installer = { path = "../uv/crates/uv-installer" }
+uv-normalize = { path = "../uv/crates/uv-normalize" }
+uv-python = { path = "../uv/crates/uv-python" }
+uv-requirements = { path = "../uv/crates/uv-requirements" }
+uv-resolver = { path = "../uv/crates/uv-resolver" }
+uv-types = { path = "../uv/crates/uv-types" }
 winapi = { version = "0.3.9", default-features = false }
 xxhash-rust = "0.8.13"
 zip = { version = "2.2.2", default-features = false }
diff --git a/crates/pypi_mapping/src/custom_pypi_mapping.rs b/crates/pypi_mapping/src/custom_pypi_mapping.rs
index bed1531..478e908 100644
--- a/crates/pypi_mapping/src/custom_pypi_mapping.rs
+++ b/crates/pypi_mapping/src/custom_pypi_mapping.rs
@@ -5,7 +5,9 @@ use std::{
 };
 
 use miette::{Context, IntoDiagnostic};
+use pixi_consts::consts;
 use rattler_conda_types::{PackageUrl, RepoDataRecord};
+use reqwest::header::{ACCEPT, HeaderMap, HeaderName, HeaderValue, USER_AGENT};
 use reqwest_middleware::ClientWithMiddleware;
 use url::Url;
 
@@ -20,8 +22,25 @@ pub async fn fetch_mapping_from_url(
     client: &ClientWithMiddleware,
     url: &Url,
 ) -> miette::Result<CompressedMapping> {
+    let mut headers = HeaderMap::new();
+    if url.as_str().starts_with("https://api.github.com/repos/") {
+        let user_agent = format!("pixi/{}", consts::PIXI_VERSION);
+        headers.insert(
+            ACCEPT,
+            HeaderValue::from_static("application/vnd.github.raw+json"),
+        );
+        headers.insert(
+            USER_AGENT,
+            HeaderValue::from_str(&user_agent).unwrap(),
+        );
+        headers.insert(
+            HeaderName::from_static("x-github-api-version"),
+            HeaderValue::from_static("2022-11-28"),
+        );
+    }
     let response = client
         .get(url.clone())
+        .headers(headers)
         .send()
         .await
         .into_diagnostic()
diff --git a/crates/pypi_mapping/src/prefix_pypi_name_mapping.rs b/crates/pypi_mapping/src/prefix_pypi_name_mapping.rs
index 7a31c44..b9edb83 100644
--- a/crates/pypi_mapping/src/prefix_pypi_name_mapping.rs
+++ b/crates/pypi_mapping/src/prefix_pypi_name_mapping.rs
@@ -22,7 +22,7 @@ use super::{
 const STORAGE_URL: &str = "https://conda-mapping.prefix.dev";
 const HASH_DIR: &str = "hash-v0";
 const COMPRESSED_MAPPING: &str =
-    "https://raw.githubusercontent.com/prefix-dev/parselmouth/main/files/compressed_mapping.json";
+    "https://api.github.com/repos/prefix-dev/parselmouth/contents/files/compressed_mapping.json";
 
 #[derive(Debug, Deserialize, Serialize, Clone)]
 pub struct Package {
diff --git a/src/global/install.rs b/src/global/install.rs
index 133ca98..8544e99 100644
--- a/src/global/install.rs
+++ b/src/global/install.rs
@@ -53,7 +53,7 @@ pub(crate) fn script_exec_mapping<'a>(
             } else {
                 false
             }
-        })
+        }).or_else(|| matching_executables.first())
     } else {
         matching_executables.first()
     };
diff --git a/src/global/project/parsed_manifest.rs b/src/global/project/parsed_manifest.rs
index 6102b5b..a97d165 100644
--- a/src/global/project/parsed_manifest.rs
+++ b/src/global/project/parsed_manifest.rs
@@ -321,11 +321,7 @@ impl FromStr for ExposedName {
     type Err = ExposedNameError;
 
     fn from_str(value: &str) -> Result<Self, Self::Err> {
-        if value == "pixi" {
-            Err(ExposedNameError::PixiBinParseError)
-        } else {
-            Ok(ExposedName(value.to_string()))
-        }
+        Ok(ExposedName(value.to_string()))
     }
 }
 
-- 
2.46.0.windows.1

