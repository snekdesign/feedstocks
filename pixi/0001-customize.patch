From 6915516b939358e952b5bfbe10e178eff6359da9 Mon Sep 17 00:00:00 2001
From: snekdesign <104812819+snekdesign@users.noreply.github.com>
Date: Tue, 20 Aug 2024 20:44:27 +0800
Subject: [PATCH] customize

---
 Cargo.toml                                    | 46 +++++++++----------
 .../pypi_mapping/src/custom_pypi_mapping.rs   | 19 ++++++++
 .../src/prefix_pypi_name_mapping.rs           |  2 +-
 3 files changed, 43 insertions(+), 24 deletions(-)

diff --git a/Cargo.toml b/Cargo.toml
index 64a3ee8..58d1fa7 100644
--- a/Cargo.toml
+++ b/Cargo.toml
@@ -85,14 +85,14 @@ toml_edit = "0.22.11"
 tracing = "0.1.40"
 tracing-subscriber = "0.3.18"
 typed-path = "0.9.1"
-uv-distribution-filename = { git = "https://github.com/astral-sh/uv", tag = "0.4.30" }
-uv-distribution-types = { git = "https://github.com/astral-sh/uv", tag = "0.4.30" }
-uv-install-wheel = { git = "https://github.com/astral-sh/uv", tag = "0.4.30" }
-uv-pep440 = { git = "https://github.com/astral-sh/uv", tag = "0.4.30" }
-uv-pep508 = { git = "https://github.com/astral-sh/uv", tag = "0.4.30" }
-uv-platform-tags = { git = "https://github.com/astral-sh/uv", tag = "0.4.30" }
-uv-pypi-types = { git = "https://github.com/astral-sh/uv", tag = "0.4.30" }
-uv-requirements-txt = { git = "https://github.com/astral-sh/uv", tag = "0.4.30" }
+uv-distribution-filename = { path = "../uv/crates/uv-distribution-filename" }
+uv-distribution-types = { path = "../uv/crates/uv-distribution-types" }
+uv-install-wheel = { path = "../uv/crates/uv-install-wheel" }
+uv-pep440 = { path = "../uv/crates/uv-pep440" }
+uv-pep508 = { path = "../uv/crates/uv-pep508" }
+uv-platform-tags = { path = "../uv/crates/uv-platform-tags" }
+uv-pypi-types = { path = "../uv/crates/uv-pypi-types" }
+uv-requirements-txt = { path = "../uv/crates/uv-requirements-txt" }
 
 # Rattler crates
 file_url = "0.1.4"
@@ -111,19 +111,19 @@ rattler_virtual_packages = { version = "1.1.7", default-features = false }
 
 # Bumping this to a higher version breaks the Windows path handling.
 url = "2.5.2"
-uv-auth = { git = "https://github.com/astral-sh/uv", tag = "0.4.30" }
-uv-cache = { git = "https://github.com/astral-sh/uv", tag = "0.4.30" }
-uv-client = { git = "https://github.com/astral-sh/uv", tag = "0.4.30" }
-uv-configuration = { git = "https://github.com/astral-sh/uv", tag = "0.4.30" }
-uv-dispatch = { git = "https://github.com/astral-sh/uv", tag = "0.4.30" }
-uv-distribution = { git = "https://github.com/astral-sh/uv", tag = "0.4.30" }
-uv-git = { git = "https://github.com/astral-sh/uv", tag = "0.4.30" }
-uv-installer = { git = "https://github.com/astral-sh/uv", tag = "0.4.30" }
-uv-normalize = { git = "https://github.com/astral-sh/uv", tag = "0.4.30" }
-uv-python = { git = "https://github.com/astral-sh/uv", tag = "0.4.30" }
-uv-requirements = { git = "https://github.com/astral-sh/uv", tag = "0.4.30" }
-uv-resolver = { git = "https://github.com/astral-sh/uv", tag = "0.4.30" }
-uv-types = { git = "https://github.com/astral-sh/uv", tag = "0.4.30" }
+uv-auth = { path = "../uv/crates/uv-auth" }
+uv-cache = { path = "../uv/crates/uv-cache" }
+uv-client = { path = "../uv/crates/uv-client" }
+uv-configuration = { path = "../uv/crates/uv-configuration" }
+uv-dispatch = { path = "../uv/crates/uv-dispatch" }
+uv-distribution = { path = "../uv/crates/uv-distribution" }
+uv-git = { path = "../uv/crates/uv-git" }
+uv-installer = { path = "../uv/crates/uv-installer" }
+uv-normalize = { path = "../uv/crates/uv-normalize" }
+uv-python = { path = "../uv/crates/uv-python" }
+uv-requirements = { path = "../uv/crates/uv-requirements" }
+uv-resolver = { path = "../uv/crates/uv-resolver" }
+uv-types = { path = "../uv/crates/uv-types" }
 winapi = { version = "0.3.9", default-features = false }
 xxhash-rust = "0.8.10"
 zip = { version = "2.2.0", default-features = false }
@@ -324,8 +324,8 @@ tokio = { workspace = true, features = ["rt"] }
 
 
 [patch.crates-io]
-reqwest-middleware = { git = "https://github.com/TrueLayer/reqwest-middleware", rev = "d95ec5a99fcc9a4339e1850d40378bbfe55ab121" }
-reqwest-retry = { git = "https://github.com/TrueLayer/reqwest-middleware", rev = "d95ec5a99fcc9a4339e1850d40378bbfe55ab121" }
+reqwest-middleware = { path = "../reqwest-middleware/reqwest-middleware" }
+reqwest-retry = { path = "../reqwest-middleware/reqwest-retry" }
 # For pyproject-toml
 # pyproject-toml = { git = "https://github.com/tdejager/pyproject-toml-rs", branch = "feat/bump-508-440" }
 # If you change this also change the versions in the the patch section for uv
diff --git a/crates/pypi_mapping/src/custom_pypi_mapping.rs b/crates/pypi_mapping/src/custom_pypi_mapping.rs
index 84f4cd0..f85756f 100644
--- a/crates/pypi_mapping/src/custom_pypi_mapping.rs
+++ b/crates/pypi_mapping/src/custom_pypi_mapping.rs
@@ -5,7 +5,9 @@ use std::{
 };
 
 use miette::{Context, IntoDiagnostic};
+use pixi_consts::consts;
 use rattler_conda_types::{PackageUrl, RepoDataRecord};
+use reqwest::header::{ACCEPT, HeaderMap, HeaderName, HeaderValue, USER_AGENT};
 use reqwest_middleware::ClientWithMiddleware;
 use url::Url;
 
@@ -20,8 +22,25 @@ pub async fn fetch_mapping_from_url(
     client: &ClientWithMiddleware,
     url: &Url,
 ) -> miette::Result<CompressedMapping> {
+    let mut headers = HeaderMap::new();
+    if url.as_str().starts_with("https://api.github.com/repos/") {
+        let user_agent = format!("pixi/{}", consts::PIXI_VERSION);
+        headers.insert(
+            ACCEPT,
+            HeaderValue::from_static("application/vnd.github.raw+json"),
+        );
+        headers.insert(
+            USER_AGENT,
+            HeaderValue::from_str(&user_agent).unwrap(),
+        );
+        headers.insert(
+            HeaderName::from_static("x-github-api-version"),
+            HeaderValue::from_static("2022-11-28"),
+        );
+    }
     let response = client
         .get(url.clone())
+        .headers(headers)
         .send()
         .await
         .into_diagnostic()
diff --git a/crates/pypi_mapping/src/prefix_pypi_name_mapping.rs b/crates/pypi_mapping/src/prefix_pypi_name_mapping.rs
index b36ecc3..c65de12 100644
--- a/crates/pypi_mapping/src/prefix_pypi_name_mapping.rs
+++ b/crates/pypi_mapping/src/prefix_pypi_name_mapping.rs
@@ -22,7 +22,7 @@ use super::{
 const STORAGE_URL: &str = "https://conda-mapping.prefix.dev";
 const HASH_DIR: &str = "hash-v0";
 const COMPRESSED_MAPPING: &str =
-    "https://raw.githubusercontent.com/prefix-dev/parselmouth/main/files/compressed_mapping.json";
+    "https://api.github.com/repos/prefix-dev/parselmouth/contents/files/compressed_mapping.json";
 
 #[derive(Debug, Deserialize, Serialize, Clone)]
 pub struct Package {
-- 
2.46.0.windows.1

