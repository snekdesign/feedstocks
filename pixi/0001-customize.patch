From 6915516b939358e952b5bfbe10e178eff6359da9 Mon Sep 17 00:00:00 2001
From: snekdesign <104812819+snekdesign@users.noreply.github.com>
Date: Tue, 20 Aug 2024 20:44:27 +0800
Subject: [PATCH] customize

---
 Cargo.toml                                    | 88 +++++++++----------
 build.rs                                      |  3 +
 crates/pixi/Cargo.toml                        |  2 +
 crates/pixi_global/src/install.rs             |  2 +-
 .../src/project/parsed_manifest.rs            |  6 +-
 5 files changed, 51 insertions(+), 50 deletions(-)
 create mode 100644 build.rs

diff --git a/Cargo.toml b/Cargo.toml
index 40d989b..0eb71e9 100644
--- a/Cargo.toml
+++ b/Cargo.toml
@@ -113,60 +113,60 @@ tracing = "0.1.41"
 # Forcing the version due to this PR https://github.com/tokio-rs/tracing/pull/3368
 tracing-subscriber = "=0.3.19"
 typed-path = "0.11.0"
-uv-build-frontend = { git = "https://github.com/astral-sh/uv", tag = "0.8.5" }
-uv-distribution-filename = { git = "https://github.com/astral-sh/uv", tag = "0.8.5" }
-uv-distribution-types = { git = "https://github.com/astral-sh/uv", tag = "0.8.5" }
-uv-install-wheel = { git = "https://github.com/astral-sh/uv", tag = "0.8.5" }
-uv-pep440 = { git = "https://github.com/astral-sh/uv", tag = "0.8.5" }
-uv-pep508 = { git = "https://github.com/astral-sh/uv", tag = "0.8.5" }
-uv-platform-tags = { git = "https://github.com/astral-sh/uv", tag = "0.8.5" }
-uv-pypi-types = { git = "https://github.com/astral-sh/uv", tag = "0.8.5" }
-uv-requirements-txt = { git = "https://github.com/astral-sh/uv", tag = "0.8.5" }
+uv-build-frontend = { path = "../uv/crates/uv-build-frontend" }
+uv-distribution-filename = { path = "../uv/crates/uv-distribution-filename" }
+uv-distribution-types = { path = "../uv/crates/uv-distribution-types" }
+uv-install-wheel = { path = "../uv/crates/uv-install-wheel" }
+uv-pep440 = { path = "../uv/crates/uv-pep440" }
+uv-pep508 = { path = "../uv/crates/uv-pep508" }
+uv-platform-tags = { path = "../uv/crates/uv-platform-tags" }
+uv-pypi-types = { path = "../uv/crates/uv-pypi-types" }
+uv-requirements-txt = { path = "../uv/crates/uv-requirements-txt" }
 
 wax = "0.6.0"
 which = "8.0.0"
 
 # Rattler crates
-coalesced_map = "0.1.1"
-file_url = "0.2.6"
-rattler = { version = "0.37.3", default-features = false }
-rattler_cache = { version = "0.3.34", default-features = false }
-rattler_conda_types = { version = "0.39.2", default-features = false, features = [
+coalesced_map = { path = "../rattler/crates/coalesced_map" }
+file_url = { path = "../rattler/crates/file_url" }
+rattler = { path = "../rattler/crates/rattler", default-features = false }
+rattler_cache = { path = "../rattler/crates/rattler_cache", default-features = false }
+rattler_conda_types = { path = "../rattler/crates/rattler_conda_types", default-features = false, features = [
   "rayon",
 ] }
-rattler_digest = { version = "1.1.5", default-features = false }
-rattler_lock = { version = "0.24.1", default-features = false }
-rattler_menuinst = { version = "0.2.23", default-features = false }
-rattler_networking = { version = "0.25.13", default-features = false, features = [
+rattler_digest = { path = "../rattler/crates/rattler_digest", default-features = false }
+rattler_lock = { path = "../rattler/crates/rattler_lock", default-features = false }
+rattler_menuinst = { path = "../rattler/crates/rattler_menuinst", default-features = false }
+rattler_networking = { path = "../rattler/crates/rattler_networking", default-features = false, features = [
   "google-cloud-auth",
   "dirs",
 ] }
-rattler_package_streaming = { version = "0.23.0", default-features = false }
-rattler_repodata_gateway = { version = "0.24.4", default-features = false }
-rattler_shell = { version = "0.25.0", default-features = false }
-rattler_solve = { version = "3.0.3", default-features = false }
-rattler_virtual_packages = { version = "2.1.5", default-features = false }
-simple_spawn_blocking = { version = "1.1.0", default-features = false }
+rattler_package_streaming = { path = "../rattler/crates/rattler_package_streaming", default-features = false }
+rattler_repodata_gateway = { path = "../rattler/crates/rattler_repodata_gateway", default-features = false }
+rattler_shell = { path = "../rattler/crates/rattler_shell", default-features = false }
+rattler_solve = { path = "../rattler/crates/rattler_solve", default-features = false }
+rattler_virtual_packages = { path = "../rattler/crates/rattler_virtual_packages", default-features = false }
+simple_spawn_blocking = { path = "../rattler/crates/simple_spawn_blocking", default-features = false }
 
 # Bumping this to a higher version breaks the Windows path handling.
 url = "2.5.4"
-uv-auth = { git = "https://github.com/astral-sh/uv", tag = "0.8.5" }
-uv-cache = { git = "https://github.com/astral-sh/uv", tag = "0.8.5" }
-uv-cache-info = { git = "https://github.com/astral-sh/uv", tag = "0.8.5" }
-uv-client = { git = "https://github.com/astral-sh/uv", tag = "0.8.5" }
-uv-configuration = { git = "https://github.com/astral-sh/uv", tag = "0.8.5" }
-uv-dispatch = { git = "https://github.com/astral-sh/uv", tag = "0.8.5" }
-uv-distribution = { git = "https://github.com/astral-sh/uv", tag = "0.8.5" }
-uv-git = { git = "https://github.com/astral-sh/uv", tag = "0.8.5" }
-uv-git-types = { git = "https://github.com/astral-sh/uv", tag = "0.8.5" }
-uv-installer = { git = "https://github.com/astral-sh/uv", tag = "0.8.5" }
-uv-normalize = { git = "https://github.com/astral-sh/uv", tag = "0.8.5" }
-uv-python = { git = "https://github.com/astral-sh/uv", tag = "0.8.5" }
-uv-redacted = { git = "https://github.com/astral-sh/uv", tag = "0.8.5" }
-uv-requirements = { git = "https://github.com/astral-sh/uv", tag = "0.8.5" }
-uv-resolver = { git = "https://github.com/astral-sh/uv", tag = "0.8.5" }
-uv-types = { git = "https://github.com/astral-sh/uv", tag = "0.8.5" }
-uv-workspace = { git = "https://github.com/astral-sh/uv", tag = "0.8.5" }
+uv-auth = { path = "../uv/crates/uv-auth" }
+uv-cache = { path = "../uv/crates/uv-cache" }
+uv-cache-info = { path = "../uv/crates/uv-cache-info" }
+uv-client = { path = "../uv/crates/uv-client" }
+uv-configuration = { path = "../uv/crates/uv-configuration" }
+uv-dispatch = { path = "../uv/crates/uv-dispatch" }
+uv-distribution = { path = "../uv/crates/uv-distribution" }
+uv-git = { path = "../uv/crates/uv-git" }
+uv-git-types = { path = "../uv/crates/uv-git-types" }
+uv-installer = { path = "../uv/crates/uv-installer" }
+uv-normalize = { path = "../uv/crates/uv-normalize" }
+uv-python = { path = "../uv/crates/uv-python" }
+uv-redacted = { path = "../uv/crates/uv-redacted" }
+uv-requirements = { path = "../uv/crates/uv-requirements" }
+uv-resolver = { path = "../uv/crates/uv-resolver" }
+uv-types = { path = "../uv/crates/uv-types" }
+uv-workspace = { path = "../uv/crates/uv-workspace" }
 winapi = { version = "0.3.9", default-features = false }
 xxhash-rust = "0.8.15"
 zip = { version = "2.4.2", default-features = false }
@@ -232,6 +232,6 @@ strip = "none"               # or "debuginfo" to separate
 
 [patch.crates-io]
 # This is a temporary patch to get `cargo vendor` to work with the `uv` and pep508_rs` crates.
-reqwest-middleware = { git = "https://github.com/astral-sh/reqwest-middleware", rev = "ad8b9d332d1773fde8b4cd008486de5973e0a3f8" }
-reqwest-retry = { git = "https://github.com/astral-sh/reqwest-middleware", rev = "ad8b9d332d1773fde8b4cd008486de5973e0a3f8" }
-version-ranges = { git = "https://github.com/astral-sh/pubgrub", rev = "06ec5a5f59ffaeb6cf5079c6cb184467da06c9db" }
+reqwest-middleware = { path = "../reqwest-middleware/reqwest-middleware" }
+reqwest-retry = { path = "../reqwest-middleware/reqwest-retry" }
+version-ranges = { path = "../pubgrub/version-ranges" }
diff --git a/build.rs b/build.rs
new file mode 100644
index 0000000..507c62e
--- /dev/null
+++ b/build.rs
@@ -0,0 +1,3 @@
+fn main() {
+    thunk::thunk();
+}
diff --git a/crates/pixi/Cargo.toml b/crates/pixi/Cargo.toml
index 1742df0..c87d7a8 100644
--- a/crates/pixi/Cargo.toml
+++ b/crates/pixi/Cargo.toml
@@ -29,6 +29,8 @@ pixi_allocator = { workspace = true, optional = true }
 pixi_cli = { workspace = true }
 tokio = { workspace = true, features = ["macros", "rt-multi-thread", "signal"] }
 
+[build-dependencies]
+thunk-rs = { version = "0.3.5", features = ["win7"], default-features = false }
 
 [dev-dependencies]
 async-trait = { workspace = true }
diff --git a/crates/pixi_global/src/install.rs b/crates/pixi_global/src/install.rs
index 45ff54b..0b1254d 100644
--- a/crates/pixi_global/src/install.rs
+++ b/crates/pixi_global/src/install.rs
@@ -54,7 +54,7 @@ pub(crate) fn script_exec_mapping<'a>(
             } else {
                 false
             }
-        })
+        }).or_else(|| matching_executables.first())
     } else {
         matching_executables.first()
     };
diff --git a/crates/pixi_global/src/project/parsed_manifest.rs b/crates/pixi_global/src/project/parsed_manifest.rs
index e2739a8..af80b9e 100644
--- a/crates/pixi_global/src/project/parsed_manifest.rs
+++ b/crates/pixi_global/src/project/parsed_manifest.rs
@@ -391,11 +391,7 @@ impl FromStr for ExposedName {
     type Err = ExposedNameError;
 
     fn from_str(value: &str) -> Result<Self, Self::Err> {
-        if value == pixi_utils::executable_name() {
-            Err(ExposedNameError::PixiBinParseError)
-        } else {
-            Ok(ExposedName(value.to_string()))
-        }
+        Ok(ExposedName(value.to_string()))
     }
 }
 
-- 

